<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>И элементы, которые можно считать, и элементы, которые доступны для записи, имеют значение NULL.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Получен запрос на выполнение "{0}", но отсутствует объект обратного вызова. Удаление запроса.</value>
    <comment>{0} is the method name to execute.</comment>
  </data>
  <data name="EmptyDelimiter" xml:space="preserve">
    <value>Разделитель является пустой строкой.</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Произошла ошибка при записи результата RPC JSON. {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Ошибка при десериализации входящих данных RPC JSON "{0}": {1}</value>
    <comment>{0} is the JSON RPC, {1} is the exception message.</comment>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>RPC JSON не должен равняться NULL.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} имеет параметры REF или OUT, что не поддерживается</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="MethodIsNotPublic" xml:space="preserve">
    <value>{0} не является открытым</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="MethodNameCaseIsDifferent" xml:space="preserve">
    <value>Регистр имени метода "{0}" отличается от запрошенного ("{1}")</value>
    <comment>{0} is the method signature, {1} is the requested method name.</comment>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>Число параметров в {0}: {1}; в запросе же указано {2}</value>
    <comment>{0} is the method signature, {1} is the method parameter count, {2} is the request parameter count.</comment>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Параметры {0} несовместимы с запросом: {1}</value>
    <comment>{0} is the method signature, {1} is the error message.</comment>
  </data>
  <data name="MoreThanOneMethodFound" xml:space="preserve">
    <value>Найдено более одного целевого метода: {0}.</value>
    <comment>{0} is the list of method signatures.</comment>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Достигнут конец потока.</value>
  </data>
  <data name="ReadableCannotRead" xml:space="preserve">
    <value>Не удается считать доступный для чтения элемент.</value>
  </data>
  <data name="ReadableNotSet" xml:space="preserve">
    <value>Доступный для чтения элемент не задан.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Произошел сбой при чтении RPC JSON из потока. Исключение {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>Отклик не является ошибкой.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Поток был удален</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>Задача не завершена.</value>
  </data>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>Задача отменена.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>Не удалось найти метод "{0}/{1}" в {2} по следующим причинам: {3}</value>
    <comment>{0} is the method name, {1} is arity, {2} is target class full name, {3} is the error list.</comment>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Непредвиденная ошибка при обработке RPC JSON "{0}": {1}</value>
    <comment>{0} is the json, {1} is the exception message.</comment>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>Нераспознанный входящий RPC JSON "{0}"</value>
    <comment>{0} is the json.</comment>
  </data>
  <data name="WritableCannotWrite" xml:space="preserve">
    <value>Элемент, доступный для записи, не может выполнить запись.</value>
  </data>
  <data name="WritableNotSet" xml:space="preserve">
    <value>Элемент, доступный для записи, не задан.</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Ошибка разбора заголовка Content-Length в положительное целое число.</value>
    <comment>{locked="Content-Length"}</comment>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>Размер заголовка сообщения превышает максимальный размер, поддерживаемый.</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Непредвиденная лексема «{0}» при разборе заголовков.</value>
    <comment>{0} is the token, which is typically a single character.</comment>
  </data>
</root>